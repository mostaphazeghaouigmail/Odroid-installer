#!/bin/bash

if [ "$(id -u)" != "0" ]; then
   echo "Script must be run as root !"
   exit 1
fi


needed_packages=""

_testpkg=$(dpkg -l | grep parted)
if [ "${_testpkg}" = "" ]; then
    needed_packages="${needed_packages}parted "
fi
_testpkg=$(dpkg -l | grep dosfstools)
if [ "${_testpkg}" = "" ]; then
    needed_packages="${needed_packages}dosfstools "
fi

if [ ! "${needed_packages}" = "" ]; then
    echo "You have to install ${needed_packages} !"
    exit 1
fi


if [ "${1}" = "" ]; then
    echo "destination must be specified"
    echo "USAGE: prepare_selfinst <destination_card>|<destination_image_name> [full]"
    exit 1
fi

part_start=16384       # RESERVE 8MB AT CARD START
if [ "${2}" = "full" ]; then
	_image_size=2048
else
	_image_size=200
fi
  
sdcard=${1}

#====================
image_error_exit() {
    echo ""
    umount ${indir}/mnt1 > /dev/null 2>&1
    umount ${indir}/mnt2 > /dev/null 2>&1
    rm -rf tmp/* > /dev/null 2>&1
    rmdir tmp > /dev/null 2>&1
    echo ${1}
    exit 1
}


#====================================================================================

echo ""
echo "========================================================"
echo "= Preparing Odroid MultiBoot selfinstall sd card/image ="
echo "========================================================"
echo ""

# =================
# Check destination
# =================
if [ -b $sdcard ]; then
    # we are working with block device
    # Test if requested drive is removable
    ISREMOVABLE=`udevadm info -a -n ${sdcard} | grep -o "ATTR{removable}==\"1\""`
    if [ ! "${ISREMOVABLE}" = "ATTR{removable}==\"1\"" ] ; then
	    echo "${sdcard} IS NOT REMOVABLE DRIVE !, Exiting."
	    exit 1
    fi

    _sdok=`fdisk -l $sdcard  2> /dev/null | grep Disk`
    if [ "$_sdok" = "" ]; then
	    echo "${sdcard} NOT FOUND !, Exiting."
	    exit 1
    fi
    _isimage="no"
else
    _isimage="yes"
fi


# =================================
# Create partition images if needed

if [ "${_isimage}" = "yes" ]; then
    echo "Creating image file...."
    dd if=/dev/zero of=${sdcard}1 bs=1M count=${_image_size} > /dev/null 2>&1
    dd if=/dev/zero of=${sdcard}0 bs=512 count=${part_start} > /dev/null 2>&1
    mkfs -t vfat -n SELFINST ${sdcard}1 > /dev/null 2>&1
    if [ $? -ne 0 ]; then
	image_error_exit "  ERROR formating vfat partition."
    fi
fi

umount ${sdcard}* > /dev/null 2>&1
sleep 1

# ==========================================================
# Partition and format sd/emmc card if not creating an image

if [ ! "${_isimage}" = "yes" ]; then
    echo -n "WARNING: SD card $sdcard WILL BE ERASED !, Continue (y/N)?  "
    read -n 1 ANSWER

    if [ ! "${ANSWER}" = "y" ] ; then
	echo "."
	image_error_exit "Canceled.."
    fi

    echo ""
    echo "Erasing ${sdcard} ..."
    dd if=/dev/zero of=${sdcard} bs=1M count=10 oflag=direct > /dev/null 2>&1
    sync
    sleep 1
    partprobe -s ${sdcard} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
	image_error_exit "ERROR."
	exit 1
    fi
    sleep 1

    echo "Creating new filesystem on $sdcard ..."
    echo -e "o\nw" | fdisk ${sdcard} > /dev/null 2>&1
    sync
    echo "  New filesystem created on SD card."
    sleep 1
    partprobe -s ${sdcard} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
	image_error_exit "ERROR."
	exit 1
    fi
    sleep 1

    echo ""
    echo "Creating selfinst partition on $sdcard..."
	if [ "${2}" = "full" ]; then
		echo -e "n\np\n1\n$part_start\n\nt\nc\nw" | fdisk ${sdcard} > /dev/null 2>&1
	else
		part_end=$(expr $_image_size \* 2048 + $part_start)
		echo -e "n\np\n1\n$part_start\n$part_end\nt\nc\nw" | fdisk ${sdcard} > /dev/null 2>&1
	fi
    sleep 1
    partprobe -s ${sdcard} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
	image_error_exit "ERROR."
	exit 1
    fi
    sleep 1

    echo ""
    echo "Formating partition ..."
    dd if=/dev/zero of=${sdcard}1 bs=1M count=1 oflag=direct > /dev/null 2>&1
    sync
    mkfs -t vfat -F 32 -n SELFINST ${sdcard}1 #> /dev/null 2>&1
    if [ $? -ne 0 ]; then
	image_error_exit "  ERROR formating boot partition."
    fi
    echo "  selfinst partition formated."
    sync

    echo ""
    echo "Copying boot section..."
    dd if=install-boot.img of=${sdcard} bs=512 seek=1 skip=1 count=1231 oflag=direct > /dev/null 2>&1
    dd if=install-boot.img of=${sdcard} bs=1 count=446 > /dev/null 2>&1
fi

sync

mkdir _mnt > /dev/null 2>&1

echo ""
mount ${sdcard}1 _mnt > /dev/null 2>&1
if [ $? -ne 0 ]; then
    image_error_exit "ERROR mounting destination partition ${sdcard}1."
    exit 1
fi

echo "Copying installation files..."
cp initramfs/*.inst _mnt/
cp boot.inst.ini _mnt/boot.ini


umount _mnt
if [ $? -ne 0 ]; then
    echo "umount ${sdcard}1, ERROR"
else
    rmdir _mnt
fi

if [ "${_isimage}" = "yes" ]; then
    echo "Creating final image..."
    dd if=${sdcard}0 of=${sdcard} > /dev/null 2>&1
    dd if=${sdcard}1 of=${sdcard} bs=1M conv=notrunc oflag=append > /dev/null 2>&1
    rm ${sdcard}0
    rm ${sdcard}1

    echo -e "o\nw" | fdisk ${sdcard} > /dev/null 2>&1
    echo -e "n\np\n1\n$part_start\n\nt\nc\nw" | fdisk ${sdcard} > /dev/null 2>&1

    dd if=install-boot.img of=${sdcard} bs=512 seek=1 skip=1 count=1231 conv=notrunc> /dev/null 2>&1
    dd if=install-boot.img of=${sdcard} bs=1 count=446  conv=notrunc > /dev/null 2>&1
    sleep 1
fi


rm -rf tmp/* > /dev/null 2>&1
rmdir tmp > /dev/null 2>&1

echo ""
echo "OK."
echo ""
echo "================================================="
echo "= Odroid MultiBoot selfinstall sd card prepared ="
echo "================================================="
echo ""

exit 0
